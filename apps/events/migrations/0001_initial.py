# Generated by Django 4.2.17 on 2025-10-27 20:01

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("catalogs", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EventType",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nombre"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("riego", "Riego"),
                            ("fertilizacion", "Fertilización"),
                            ("fitosanitarios", "Fitosanitarios"),
                            ("labores", "Labores Culturales"),
                            ("monitoreo", "Monitoreo"),
                            ("brotes", "Brotes"),
                            ("clima", "Variables Climáticas"),
                            ("cosecha", "Cosecha"),
                            ("poscosecha", "Poscosecha"),
                            ("mano_obra", "Mano de Obra"),
                            ("otro", "Otro"),
                        ],
                        max_length=50,
                        verbose_name="Categoría",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Descripción"),
                ),
                (
                    "schema",
                    models.JSONField(
                        default=dict,
                        help_text="JSON Schema para validación",
                        verbose_name="Esquema JSON",
                    ),
                ),
                ("version", models.IntegerField(default=1, verbose_name="Versión")),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "icon",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Icono CSS"
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True, max_length=7, null=True, verbose_name="Color Hex"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Tipo de Evento",
                "verbose_name_plural": "Tipos de Eventos",
                "db_table": "event_types",
                "ordering": ["category", "name"],
                "indexes": [
                    models.Index(fields=["name"], name="event_types_name_ad949f_idx"),
                    models.Index(
                        fields=["category"], name="event_types_categor_b7e7ab_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="event_types_is_acti_78d9ac_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("timestamp", models.DateTimeField(verbose_name="Fecha y Hora")),
                (
                    "payload",
                    models.JSONField(
                        default=dict,
                        help_text="Datos capturados según el esquema",
                        verbose_name="Datos",
                    ),
                ),
                (
                    "observations",
                    models.TextField(
                        blank=True, null=True, verbose_name="Observaciones"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="events",
                        to="catalogs.campaign",
                        verbose_name="Campaña",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="events_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creado Por",
                    ),
                ),
                (
                    "event_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="events",
                        to="events.eventtype",
                        verbose_name="Tipo de Evento",
                    ),
                ),
                (
                    "field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="catalogs.field",
                        verbose_name="Campo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Evento",
                "verbose_name_plural": "Eventos",
                "db_table": "events",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Attachment",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "file",
                    models.FileField(
                        upload_to="event_attachments/%Y/%m/", verbose_name="Archivo"
                    ),
                ),
                (
                    "file_name",
                    models.CharField(max_length=255, verbose_name="Nombre del Archivo"),
                ),
                (
                    "file_size",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10485760),
                        ],
                        verbose_name="Tamaño (bytes)",
                    ),
                ),
                (
                    "mime_type",
                    models.CharField(max_length=100, verbose_name="Tipo MIME"),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, null=True, verbose_name="Metadatos"),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="events.event",
                        verbose_name="Evento",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="attachments_uploaded",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Subido Por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Adjunto",
                "verbose_name_plural": "Adjuntos",
                "db_table": "attachments",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="Variable",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("timestamp", models.DateTimeField(verbose_name="Fecha y Hora")),
                (
                    "variable_type",
                    models.CharField(
                        choices=[
                            ("soil_moisture", "Humedad del Suelo (%)"),
                            ("soil_temp", "Temperatura del Suelo (°C)"),
                            ("soil_ec", "CE del Suelo (µS/cm)"),
                            ("soil_ph", "pH del Suelo"),
                            ("air_temp", "Temperatura del Aire (°C)"),
                            ("humidity", "Humedad Relativa (%)"),
                            ("precipitation", "Precipitación (mm)"),
                            ("wind_speed", "Velocidad del Viento (m/s)"),
                            ("solar_radiation", "Radiación Solar (W/m²)"),
                            ("ndvi", "NDVI"),
                            ("ndre", "NDRE"),
                        ],
                        max_length=50,
                        verbose_name="Tipo de Variable",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=4, max_digits=12, verbose_name="Valor"
                    ),
                ),
                ("unit", models.CharField(max_length=20, verbose_name="Unidad")),
                (
                    "source",
                    models.CharField(
                        choices=[("manual", "Manual"), ("automatic", "Automático")],
                        default="manual",
                        max_length=20,
                        verbose_name="Fuente",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, null=True, verbose_name="Metadatos"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "field",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variables",
                        to="catalogs.field",
                        verbose_name="Campo",
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variables",
                        to="catalogs.station",
                        verbose_name="Estación",
                    ),
                ),
            ],
            options={
                "verbose_name": "Variable",
                "verbose_name_plural": "Variables",
                "db_table": "variables",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["station", "-timestamp"],
                        name="variables_station_5a2345_idx",
                    ),
                    models.Index(
                        fields=["field", "-timestamp"],
                        name="variables_field_i_35a903_idx",
                    ),
                    models.Index(
                        fields=["variable_type", "-timestamp"],
                        name="variables_variabl_17c49e_idx",
                    ),
                    models.Index(
                        fields=["-timestamp"], name="variables_timesta_939cf0_idx"
                    ),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="variable",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("station__isnull", False),
                    ("field__isnull", False),
                    _connector="OR",
                ),
                name="check_variable_location",
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["field", "-timestamp"], name="events_field_i_979dea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["event_type"], name="events_event_t_9d97d1_idx"),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["campaign"], name="events_campaig_53fc78_idx"),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["-timestamp"], name="events_timesta_e69029_idx"),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["created_by"], name="events_created_2c88fa_idx"),
        ),
        migrations.AddConstraint(
            model_name="event",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "timestamp__lte",
                        datetime.datetime(
                            2025, 10, 27, 21, 1, 18, 5087, tzinfo=datetime.timezone.utc
                        ),
                    )
                ),
                name="check_event_timestamp",
            ),
        ),
        migrations.AddIndex(
            model_name="attachment",
            index=models.Index(fields=["event"], name="attachments_event_i_d8dc50_idx"),
        ),
        migrations.AddIndex(
            model_name="attachment",
            index=models.Index(
                fields=["-uploaded_at"], name="attachments_uploade_7b935b_idx"
            ),
        ),
    ]
